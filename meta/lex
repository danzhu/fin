> start [ALPHA] ID
> start 0 ZERO
> start 123456789 NUM
> start + ADD
> start - SUB
> start * MULT
> start / DIV
> start % MOD
> start = ASSN
> start & AMP
> start ! EXCL
> start : COLON
> start ( LPAREN
> start ) RPAREN
> start < LT
> start > GT
> start \ BACKSLASH
> start , COMMA
> start [SPACE] start
> start # comment
> ID [ALPHA][NUM] ID
> NUM [NUM] NUM
> ZERO . FLOAT
> NUM . FLOAT
> FLOAT [NUM] FLOAT
> ADD = ADD_ASSN
> SUB = SUB_ASSN
> MULT = MULT_ASSN
> DIV = DIV_ASSN
> MOD = MOD_ASSN
> ASSN = EQ
> EXCL = NE
> LT = LE
> GT = GE
> comment [ANY] comment
> comment [LF] start
type ZERO NUM
keyword import IMPORT
keyword def DEF
keyword let LET
keyword if IF
keyword else ELSE
keyword while WHILE
keyword return RETURN
keyword and AND
keyword or OR
