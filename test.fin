import rt

struct Vec
    x Float
    y Float

enum Res{T, E}
    OK(value T)
    ERR(error E)

def distance(vec Vec) Float
    match vec
        Vec(x, y) => x * x + y * y

def print(res Res{Int, Float})
    match res
        Res::OK(val) => val.rt::print()
        Res::ERR(err) => err.rt::print()

def fib(n Int) Int
    match n
        0 => 0
        1 => 1
        _ => fib(n - 2) + fib(n - 1)

def main()
    let vec = Vec(3., 4.)
    vec.distance().rt::print()

    let res Res{Int, Float} = Res::OK(12)
    res.print()

    res = Res::ERR(12.3)
    res.print()

    fib(20).rt::print()
